{"ast":null,"code":"var _jsxFileName = \"/Users/nanazgl/Desktop/final/src/pages/DatabaseContext.js\";\n// DatabaseContext.js\nimport React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nconst DatabaseContext = createContext();\nexport const useDatabase = () => {\n  return useContext(DatabaseContext);\n};\nexport const DatabaseProvider = ({\n  children\n}) => {\n  const fetchLanguages = async () => {\n    try {\n      const response = await axios.get('http://localhost:3002/languages');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching languages:', error);\n      return [];\n    }\n  };\n  const fetchThemes = async selectedLanguage => {\n    try {\n      const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching themes:', error);\n      return [];\n    }\n  };\n  const fetchFlashcards = async (selectedLanguage, selectedTheme) => {\n    try {\n      const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching flashcards:', error);\n      return [];\n    }\n  };\n  return /*#__PURE__*/React.createElement(DatabaseContext.Provider, {\n    value: {\n      fetchLanguages,\n      fetchThemes,\n      fetchFlashcards\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n// store.js\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nconst isNode = typeof process !== 'undefined' && process.release && process.release.name === 'node'; // Check if running in Node.js environment\n\nconst store = isNode ? createStore(rootReducer) : undefined;\nexport default store;","map":{"version":3,"names":["React","createContext","useContext","axios","DatabaseContext","useDatabase","DatabaseProvider","children","fetchLanguages","response","get","data","error","console","fetchThemes","selectedLanguage","fetchFlashcards","selectedTheme","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","createStore","rootReducer","isNode","process","release","name","store","undefined"],"sources":["/Users/nanazgl/Desktop/final/src/pages/DatabaseContext.js"],"sourcesContent":["// DatabaseContext.js\nimport React, { createContext, useContext } from 'react';\nimport axios from 'axios';\n\nconst DatabaseContext = createContext();\n\nexport const useDatabase = () => {\n    return useContext(DatabaseContext);\n};\n\nexport const DatabaseProvider = ({ children }) => {\n    const fetchLanguages = async () => {\n        try {\n            const response = await axios.get('http://localhost:3002/languages');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching languages:', error);\n            return [];\n        }\n    };\n\n    const fetchThemes = async (selectedLanguage) => {\n        try {\n            const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching themes:', error);\n            return [];\n        }\n    };\n\n    const fetchFlashcards = async (selectedLanguage, selectedTheme) => {\n        try {\n            const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching flashcards:', error);\n            return [];\n        }\n    };\n\n    return (\n        <DatabaseContext.Provider value={{ fetchLanguages, fetchThemes, fetchFlashcards }}>\n            {children}\n        </DatabaseContext.Provider>\n    );\n};\n\n// store.js\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst isNode = typeof process !== 'undefined' && process.release && process.release.name === 'node'; // Check if running in Node.js environment\n\nconst store = isNode ? createStore(rootReducer) : undefined;\n\nexport default store;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAGH,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAOH,UAAU,CAACE,eAAe,CAAC;AACtC,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC9C,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,iCAAiC,CAAC;MACnE,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,gBAAgB,IAAK;IAC5C,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,gCAA+BK,gBAAiB,EAAC,CAAC;MACpF,OAAON,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMI,eAAe,GAAG,MAAAA,CAAOD,gBAAgB,EAAEE,aAAa,KAAK;IAC/D,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,+BAA8BK,gBAAiB,IAAGE,aAAc,EAAC,CAAC;MACpG,OAAOR,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,EAAE;IACb;EACJ,CAAC;EAED,oBACIZ,KAAA,CAAAkB,aAAA,CAACd,eAAe,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,cAAc;MAAEM,WAAW;MAAEE;IAAgB,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7EnB,QACqB,CAAC;AAEnC,CAAC;;AAED;AACA,SAASoB,WAAW,QAAQ,OAAO;AACnC,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,MAAM,GAAG,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,OAAO,IAAID,OAAO,CAACC,OAAO,CAACC,IAAI,KAAK,MAAM,CAAC,CAAC;;AAErG,MAAMC,KAAK,GAAGJ,MAAM,GAAGF,WAAW,CAACC,WAAW,CAAC,GAAGM,SAAS;AAE3D,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}