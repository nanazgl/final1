{"ast":null,"code":"var _jsxFileName = \"/Users/nanazgl/Desktop/final/src/pages/Learn.tsx\";\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { setLanguage, setTheme } from '../redux/actions';\nimport ThemeSelector from \"./ThemeSelector\";\nimport \"./Learn.css\";\nconst LanguageThemeContext = createContext({\n  selectedLanguage: null,\n  selectedTheme: null,\n  setLanguage: () => {},\n  setTheme: () => {}\n});\nconst Learn = () => {\n  var _flashcards$currentFl, _flashcards$currentFl2;\n  const dispatch = useDispatch();\n  const selectedLanguage = useSelector(state => state.selectedLanguage);\n  const selectedTheme = useSelector(state => state.selectedTheme);\n  const [languages, setLanguages] = useState([]);\n  const [themes, setThemes] = useState([]);\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [quizMode, setQuizMode] = useState(false);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [currentQuizQuestionIndex, setCurrentQuizQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState('');\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  useEffect(() => {\n    const fetchLanguages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/languages');\n        setLanguages(response.data);\n      } catch (error) {\n        console.error('Error fetching languages:', error);\n      }\n    };\n    fetchLanguages();\n  }, []);\n  const handleLanguageSelect = async selectedLanguage => {\n    dispatch(setLanguage(selectedLanguage));\n    try {\n      const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n      setThemes(response.data);\n    } catch (error) {\n      console.error('Error fetching themes:', error);\n    }\n  };\n  const handleThemeSelect = async selectedTheme => {\n    dispatch(setTheme(selectedTheme)); // Используем экшен setTheme\n    setCurrentFlashcardIndex(0);\n    setCurrentQuizQuestionIndex(0);\n    setIsFlipped(false);\n    setQuizMode(false);\n    try {\n      const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n      setFlashcards(response.data);\n    } catch (error) {\n      console.error('Error fetching flashcards:', error);\n    }\n  };\n  const handleCardClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const isOptionSelected = option => {\n    return userAnswers === option;\n  };\n  const handleNextCard = () => {\n    if (!quizMode) {\n      if (currentFlashcardIndex < flashcards.length - 1) {\n        setCurrentFlashcardIndex(currentFlashcardIndex + 1);\n      } else {\n        setCurrentFlashcardIndex(0);\n      }\n    } else {\n      if (currentQuizQuestionIndex < quizQuestions.length - 1) {\n        setCurrentQuizQuestionIndex(currentQuizQuestionIndex + 1);\n      } else {\n        setCurrentQuizQuestionIndex(0);\n      }\n    }\n    setIsFlipped(false);\n    setUserAnswers('');\n  };\n  const handlePreviousCard = () => {\n    if (!quizMode) {\n      if (currentFlashcardIndex > 0) {\n        setCurrentFlashcardIndex(currentFlashcardIndex - 1);\n      } else {\n        setCurrentFlashcardIndex(flashcards.length - 1);\n      }\n    } else {\n      if (currentQuizQuestionIndex > 0) {\n        setCurrentQuizQuestionIndex(currentQuizQuestionIndex - 1);\n      } else {\n        setCurrentQuizQuestionIndex(quizQuestions.length - 1);\n      }\n    }\n    setIsFlipped(false);\n  };\n  const handleTakeQuiz = () => {\n    if (!selectedLanguage || !selectedTheme) {\n      alert('Please select a language and a theme to take the quiz.');\n      return;\n    }\n    const quizQuestions = flashcards.map(card => {\n      const correctAnswer = card.answer;\n      const options = shuffleArray(flashcards.map(flashcard => flashcard.answer));\n      return {\n        question: card.question,\n        options,\n        correctAnswer\n      };\n    });\n    setQuizQuestions(quizQuestions);\n    setUserAnswers('');\n    setCorrectAnswers(0);\n    setQuizMode(true);\n  };\n  const handleAnswerSelect = selectedAnswer => {\n    setUserAnswers(selectedAnswer);\n  };\n  const handleSubmitQuiz = () => {\n    const correctAnswer = quizQuestions[currentQuizQuestionIndex].correctAnswer;\n    const isCorrect = userAnswers === correctAnswer;\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  return /*#__PURE__*/React.createElement(LanguageThemeContext.Provider, {\n    value: {\n      selectedLanguage,\n      selectedTheme,\n      setLanguage,\n      setTheme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"language-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, languages.map(language => /*#__PURE__*/React.createElement(\"li\", {\n    key: language.id,\n    onClick: () => handleLanguageSelect(language.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, language.name)))), selectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theme-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Themes for \", selectedLanguage), /*#__PURE__*/React.createElement(ThemeSelector, {\n    themes: themes,\n    onThemeSelect: handleThemeSelect,\n    language: selectedLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  })), selectedTheme && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, quizMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"quiz-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }, \"Quiz: \", selectedTheme), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, quizQuestions[currentQuizQuestionIndex].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, quizQuestions[currentQuizQuestionIndex].options.map((option, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: `quiz-option ${isOptionSelected(option) ? 'selected-option' : ''}`,\n    onClick: () => handleAnswerSelect(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    onClick: handleSubmitQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, \"Submit Quiz\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, \"Correct Answers: \", correctAnswers)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: `card__inner ${isFlipped ? 'is-flipped' : ''}`,\n    onClick: handleCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, flashcards.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"question\",\n    className: `question ${isFlipped ? 'hidden' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, (_flashcards$currentFl = flashcards[currentFlashcardIndex]) === null || _flashcards$currentFl === void 0 ? void 0 : _flashcards$currentFl.question), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"answer\",\n    className: `answer ${isFlipped ? '' : 'hidden'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, (_flashcards$currentFl2 = flashcards[currentFlashcardIndex]) === null || _flashcards$currentFl2 === void 0 ? void 0 : _flashcards$currentFl2.answer)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, \"Loading flashcards...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, !quizMode && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTakeQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 39\n    }\n  }, \"Take a Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePreviousCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"Next\"))), !selectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instruction-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"Choose a language to start learning.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"5.png\",\n    alt: \"Placeholder\",\n    className: \"instruction-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }))));\n};\nconst mapStateToProps = state => ({\n  selectedLanguage: state.selectedLanguage,\n  selectedTheme: state.selectedTheme\n});\nconst mapDispatchToProps = {\n  setLanguage,\n  setTheme\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Learn);\nexport const useLanguageTheme = () => useContext(LanguageThemeContext);","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","axios","useSelector","useDispatch","connect","setLanguage","setTheme","ThemeSelector","LanguageThemeContext","selectedLanguage","selectedTheme","Learn","_flashcards$currentFl","_flashcards$currentFl2","dispatch","state","languages","setLanguages","themes","setThemes","flashcards","setFlashcards","currentFlashcardIndex","setCurrentFlashcardIndex","isFlipped","setIsFlipped","quizMode","setQuizMode","quizQuestions","setQuizQuestions","currentQuizQuestionIndex","setCurrentQuizQuestionIndex","userAnswers","setUserAnswers","correctAnswers","setCorrectAnswers","fetchLanguages","response","get","data","error","console","handleLanguageSelect","handleThemeSelect","handleCardClick","isOptionSelected","option","handleNextCard","length","handlePreviousCard","handleTakeQuiz","alert","map","card","correctAnswer","answer","options","shuffleArray","flashcard","question","handleAnswerSelect","selectedAnswer","handleSubmitQuiz","isCorrect","array","i","j","Math","floor","random","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","language","key","id","onClick","name","onThemeSelect","Fragment","idx","src","alt","mapStateToProps","mapDispatchToProps","useLanguageTheme"],"sources":["/Users/nanazgl/Desktop/final/src/pages/Learn.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext, FC } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch, connect } from 'react-redux';\nimport { setLanguage, setTheme } from '../redux/actions';\nimport ThemeSelector from \"./ThemeSelector\";\nimport \"./Learn.css\";\n\ninterface Language {\n    id: number;\n    name: string;\n}\n\ninterface Flashcard {\n    question: string;\n    answer: string;\n}\n\ninterface QuizQuestion {\n    question: string;\n    options: string[];\n    correctAnswer: string;\n}\n\nconst LanguageThemeContext = createContext<{\n    selectedLanguage: string | null;\n    selectedTheme: string | null;\n    setLanguage: (language: string) => void;\n    setTheme: (theme: string) => void;\n}>({\n    selectedLanguage: null,\n    selectedTheme: null,\n    setLanguage: () => {},\n    setTheme: () => {},\n});\n\nconst Learn: FC = () => {\n    const dispatch = useDispatch();\n    const selectedLanguage = useSelector<string | null>(state => state.selectedLanguage);\n    const selectedTheme = useSelector<string | null>(state => state.selectedTheme);\n    const [languages, setLanguages] = useState<Language[]>([]);\n    const [themes, setThemes] = useState<string[]>([]);\n    const [flashcards, setFlashcards] = useState<Flashcard[]>([]);\n    const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState<number>(0);\n    const [isFlipped, setIsFlipped] = useState<boolean>(false);\n    const [quizMode, setQuizMode] = useState<boolean>(false);\n    const [quizQuestions, setQuizQuestions] = useState<QuizQuestion[]>([]);\n    const [currentQuizQuestionIndex, setCurrentQuizQuestionIndex] = useState<number>(0);\n    const [userAnswers, setUserAnswers] = useState<string>('');\n    const [correctAnswers, setCorrectAnswers] = useState<number>(0);\n\n    useEffect(() => {\n        const fetchLanguages = async () => {\n            try {\n                const response = await axios.get<Language[]>('http://localhost:3002/languages');\n                setLanguages(response.data);\n            } catch (error) {\n                console.error('Error fetching languages:', error);\n            }\n        };\n\n        fetchLanguages();\n    }, []);\n\n\n\n    const handleLanguageSelect = async (selectedLanguage) => {\n        dispatch(setLanguage(selectedLanguage));\n\n\n        try {\n            const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n            setThemes(response.data);\n        } catch (error) {\n            console.error('Error fetching themes:', error);\n        }\n    };\n\n    const handleThemeSelect = async (selectedTheme) => {\n        dispatch(setTheme(selectedTheme)); // Используем экшен setTheme\n        setCurrentFlashcardIndex(0);\n        setCurrentQuizQuestionIndex(0);\n        setIsFlipped(false);\n        setQuizMode(false);\n\n        try {\n            const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n            setFlashcards(response.data);\n        } catch (error) {\n            console.error('Error fetching flashcards:', error);\n        }\n    };\n\n    const handleCardClick = () => {\n        setIsFlipped(!isFlipped);\n    };\n\n    const isOptionSelected = (option) => {\n        return userAnswers === option;\n    };\n\n    const handleNextCard = () => {\n        if (!quizMode) {\n            if (currentFlashcardIndex < flashcards.length - 1) {\n                setCurrentFlashcardIndex(currentFlashcardIndex + 1);\n            } else {\n                setCurrentFlashcardIndex(0);\n            }\n        } else {\n            if (currentQuizQuestionIndex < quizQuestions.length - 1) {\n                setCurrentQuizQuestionIndex(currentQuizQuestionIndex + 1);\n            } else {\n                setCurrentQuizQuestionIndex(0);\n            }\n        }\n\n        setIsFlipped(false);\n        setUserAnswers('');\n    };\n\n    const handlePreviousCard = () => {\n        if (!quizMode) {\n            if (currentFlashcardIndex > 0) {\n                setCurrentFlashcardIndex(currentFlashcardIndex - 1);\n            } else {\n                setCurrentFlashcardIndex(flashcards.length - 1);\n            }\n        } else {\n            if (currentQuizQuestionIndex > 0) {\n                setCurrentQuizQuestionIndex(currentQuizQuestionIndex - 1);\n            } else {\n                setCurrentQuizQuestionIndex(quizQuestions.length - 1);\n            }\n        }\n\n        setIsFlipped(false);\n    };\n\n    const handleTakeQuiz = () => {\n        if (!selectedLanguage || !selectedTheme) {\n            alert('Please select a language and a theme to take the quiz.');\n            return;\n        }\n\n        const quizQuestions = flashcards.map(card => {\n            const correctAnswer = card.answer;\n            const options = shuffleArray(flashcards.map(flashcard => flashcard.answer));\n            return { question: card.question, options, correctAnswer };\n        });\n\n        setQuizQuestions(quizQuestions);\n        setUserAnswers('');\n        setCorrectAnswers(0);\n        setQuizMode(true);\n    };\n\n    const handleAnswerSelect = (selectedAnswer) => {\n        setUserAnswers(selectedAnswer);\n    };\n\n    const handleSubmitQuiz = () => {\n        const correctAnswer = quizQuestions[currentQuizQuestionIndex].correctAnswer;\n        const isCorrect = userAnswers === correctAnswer;\n        if (isCorrect) {\n            setCorrectAnswers(correctAnswers + 1);\n        }\n    };\n\n    const shuffleArray = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    };\n\n    return (\n        <LanguageThemeContext.Provider value={{ selectedLanguage, selectedTheme, setLanguage, setTheme }}>\n        <div className=\"section\">\n            <div className=\"language-selector\">\n                <h3>Languages</h3>\n                <ul>\n                    {languages.map((language) => (\n                        <li key={language.id} onClick={() => handleLanguageSelect(language.name)}>\n                            {language.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {selectedLanguage && (\n                <div className=\"theme-container\">\n                    <h3>Themes for {selectedLanguage}</h3>\n                    <ThemeSelector themes={themes} onThemeSelect={handleThemeSelect} language={selectedLanguage} />\n                </div>\n            )}\n\n            {selectedTheme && (\n                <div className=\"quiz-container\">\n                    {quizMode ? (\n                        <>\n                            <h3 className=\"quiz-title\">Quiz: {selectedTheme}</h3>\n                            <div className=\"quiz-question\">\n                                <p>{quizQuestions[currentQuizQuestionIndex].question}</p>\n                            </div>\n                            <div className=\"quiz-options\">\n                                {quizQuestions[currentQuizQuestionIndex].options.map((option, idx) => (\n                                    <div\n                                        key={idx}\n                                        className={`quiz-option ${isOptionSelected(option) ? 'selected-option' : ''}`}\n                                        onClick={() => handleAnswerSelect(option)}\n                                    >\n                                        {option}\n                                    </div>\n                                ))}\n                            </div>\n\n                            <button className=\"submit-button\" onClick={handleSubmitQuiz}>Submit Quiz</button>\n                            <p>Correct Answers: {correctAnswers}</p>\n                        </>\n                    ) : (\n                        <div className={`card__inner ${isFlipped ? 'is-flipped' : ''}`} onClick={handleCardClick}>\n                            {flashcards.length > 0 ? (\n                                <>\n                                    <div\n                                        id=\"question\"\n                                        className={`question ${isFlipped ? 'hidden' : ''}`}\n                                    >\n                                        {flashcards[currentFlashcardIndex]?.question}\n                                    </div>\n                                    <div\n                                        id=\"answer\"\n                                        className={`answer ${isFlipped ? '' : 'hidden'}`}\n                                    >\n                                        {flashcards[currentFlashcardIndex]?.answer}\n                                    </div>\n                                </>\n                            ) : (\n                                <p>Loading flashcards...</p>\n                            )}\n                        </div>\n                    )}\n                    <div className=\"button-container\">\n                        {!quizMode && <button onClick={handleTakeQuiz}>Take a Quiz</button>}\n                        <button onClick={handlePreviousCard}>Previous</button>\n                        <button onClick={handleNextCard}>Next</button>\n                    </div>\n                </div>\n            )}\n\n            {!selectedLanguage && (\n                <div className=\"instruction-container\">\n                    <p className=\"instruction\">Choose a language to start learning.</p>\n                    <img src=\"5.png\" alt=\"Placeholder\" className=\"instruction-image\"/>\n                </div>\n            )}\n        </div>\n        </LanguageThemeContext.Provider>\n    );\n};\n\nconst mapStateToProps = state => ({\n    selectedLanguage: state.selectedLanguage,\n    selectedTheme: state.selectedTheme\n});\n\nconst mapDispatchToProps = {\n    setLanguage,\n    setTheme\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Learn);\n\nexport const useLanguageTheme = () => useContext(LanguageThemeContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}