{"ast":null,"code":"var _jsxFileName = \"/Users/nanazgl/Desktop/final/src/pages/Learn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { selectedLanguage, selectedTheme } from './actions';\nimport ThemeSelector from \"./ThemeSelector\";\nimport \"./Learn.css\";\nconst Learn = () => {\n  var _flashcards$currentFl, _flashcards$currentFl2;\n  const dispatch = useDispatch();\n  const selectedLanguage = useSelector(state => state.selectedLanguage);\n  const selectedTheme = useSelector(state => state.selectedTheme);\n  const [languages, setLanguages] = useState([]);\n  const [themes, setThemes] = useState([]);\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [quizMode, setQuizMode] = useState(false);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [currentQuizQuestionIndex, setCurrentQuizQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState('');\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  useEffect(() => {\n    const fetchLanguages = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/languages');\n        setLanguages(response.data);\n      } catch (error) {\n        console.error('Error fetching languages:', error);\n      }\n    };\n    fetchLanguages();\n  }, []);\n  const handleLanguageSelect = async selectedLanguage => {\n    dispatch(selectLanguage(selectedLanguage));\n    setSelectedTheme('');\n    try {\n      const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n      setThemes(response.data);\n    } catch (error) {\n      console.error('Error fetching themes:', error);\n    }\n  };\n  const handleThemeSelect = async selectedTheme => {\n    dispatch(selectTheme(selectedTheme));\n    setCurrentFlashcardIndex(0);\n    setCurrentQuizQuestionIndex(0);\n    setIsFlipped(false);\n    setQuizMode(false);\n    try {\n      const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n      setFlashcards(response.data);\n    } catch (error) {\n      console.error('Error fetching flashcards:', error);\n    }\n  };\n  const handleCardClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const isOptionSelected = option => {\n    return userAnswers === option;\n  };\n  const handleNextCard = () => {\n    if (!quizMode) {\n      if (currentFlashcardIndex < flashcards.length - 1) {\n        setCurrentFlashcardIndex(currentFlashcardIndex + 1);\n      } else {\n        setCurrentFlashcardIndex(0);\n      }\n    } else {\n      if (currentQuizQuestionIndex < quizQuestions.length - 1) {\n        setCurrentQuizQuestionIndex(currentQuizQuestionIndex + 1);\n      } else {\n        setCurrentQuizQuestionIndex(0);\n      }\n    }\n    setIsFlipped(false);\n    setUserAnswers('');\n  };\n  const handlePreviousCard = () => {\n    if (!quizMode) {\n      if (currentFlashcardIndex > 0) {\n        setCurrentFlashcardIndex(currentFlashcardIndex - 1);\n      } else {\n        setCurrentFlashcardIndex(flashcards.length - 1);\n      }\n    } else {\n      if (currentQuizQuestionIndex > 0) {\n        setCurrentQuizQuestionIndex(currentQuizQuestionIndex - 1);\n      } else {\n        setCurrentQuizQuestionIndex(quizQuestions.length - 1);\n      }\n    }\n    setIsFlipped(false);\n  };\n  const handleTakeQuiz = () => {\n    if (!selectedLanguage || !selectedTheme) {\n      alert('Please select a language and a theme to take the quiz.');\n      return;\n    }\n    const quizQuestions = flashcards.map(card => {\n      const correctAnswer = card.answer;\n      const options = shuffleArray(flashcards.map(flashcard => flashcard.answer));\n      return {\n        question: card.question,\n        options,\n        correctAnswer\n      };\n    });\n    setQuizQuestions(quizQuestions);\n    setUserAnswers('');\n    setCorrectAnswers(0);\n    setQuizMode(true);\n  };\n  const handleAnswerSelect = selectedAnswer => {\n    setUserAnswers(selectedAnswer);\n  };\n  const handleSubmitQuiz = () => {\n    const correctAnswer = quizQuestions[currentQuizQuestionIndex].correctAnswer;\n    const isCorrect = userAnswers === correctAnswer;\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"language-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, languages.map(language => /*#__PURE__*/React.createElement(\"li\", {\n    key: language.id,\n    onClick: () => handleLanguageSelect(language.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, language.name)))), selectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theme-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"Themes for \", selectedLanguage), /*#__PURE__*/React.createElement(ThemeSelector, {\n    themes: themes,\n    onThemeSelect: handleThemeSelect,\n    language: selectedLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), selectedTheme && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, quizMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"quiz-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Quiz: \", selectedTheme), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, quizQuestions[currentQuizQuestionIndex].question)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, quizQuestions[currentQuizQuestionIndex].options.map((option, idx) => /*#__PURE__*/React.createElement(\"div\", {\n    key: idx,\n    className: `quiz-option ${isOptionSelected(option) ? 'selected-option' : ''}`,\n    onClick: () => handleAnswerSelect(option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, option))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    onClick: handleSubmitQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, \"Submit Quiz\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, \"Correct Answers: \", correctAnswers)) : /*#__PURE__*/React.createElement(\"div\", {\n    className: `card__inner ${isFlipped ? 'is-flipped' : ''}`,\n    onClick: handleCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, flashcards.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"question\",\n    className: `question ${isFlipped ? 'hidden' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, (_flashcards$currentFl = flashcards[currentFlashcardIndex]) === null || _flashcards$currentFl === void 0 ? void 0 : _flashcards$currentFl.question), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"answer\",\n    className: `answer ${isFlipped ? '' : 'hidden'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, (_flashcards$currentFl2 = flashcards[currentFlashcardIndex]) === null || _flashcards$currentFl2 === void 0 ? void 0 : _flashcards$currentFl2.answer)) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, \"Loading flashcards...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, !quizMode && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTakeQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 39\n    }\n  }, \"Take a Quiz\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePreviousCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"Next\"))), !selectedLanguage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instruction-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, \"Choose a language to start learning.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"5.png\",\n    alt: \"Placeholder\",\n    className: \"instruction-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  })));\n};\nexport default Learn;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","axios","selectedLanguage","selectedTheme","ThemeSelector","Learn","_flashcards$currentFl","_flashcards$currentFl2","dispatch","state","languages","setLanguages","themes","setThemes","flashcards","setFlashcards","currentFlashcardIndex","setCurrentFlashcardIndex","isFlipped","setIsFlipped","quizMode","setQuizMode","quizQuestions","setQuizQuestions","currentQuizQuestionIndex","setCurrentQuizQuestionIndex","userAnswers","setUserAnswers","correctAnswers","setCorrectAnswers","fetchLanguages","response","get","data","error","console","handleLanguageSelect","selectLanguage","setSelectedTheme","handleThemeSelect","selectTheme","handleCardClick","isOptionSelected","option","handleNextCard","length","handlePreviousCard","handleTakeQuiz","alert","map","card","correctAnswer","answer","options","shuffleArray","flashcard","question","handleAnswerSelect","selectedAnswer","handleSubmitQuiz","isCorrect","array","i","j","Math","floor","random","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","language","key","id","onClick","name","onThemeSelect","Fragment","idx","src","alt"],"sources":["/Users/nanazgl/Desktop/final/src/pages/Learn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { selectedLanguage, selectedTheme } from './actions';\nimport ThemeSelector from \"./ThemeSelector\";\nimport \"./Learn.css\";\n\nconst Learn = () => {\n    const dispatch = useDispatch();\n    const selectedLanguage = useSelector(state => state.selectedLanguage);\n    const selectedTheme = useSelector(state => state.selectedTheme);\n    const [languages, setLanguages] = useState([]);\n    const [themes, setThemes] = useState([]);\n    const [flashcards, setFlashcards] = useState([]);\n    const [currentFlashcardIndex, setCurrentFlashcardIndex] = useState(0);\n    const [isFlipped, setIsFlipped] = useState(false);\n    const [quizMode, setQuizMode] = useState(false);\n    const [quizQuestions, setQuizQuestions] = useState([]);\n    const [currentQuizQuestionIndex, setCurrentQuizQuestionIndex] = useState(0);\n    const [userAnswers, setUserAnswers] = useState('');\n    const [correctAnswers, setCorrectAnswers] = useState(0);\n\n    useEffect(() => {\n        const fetchLanguages = async () => {\n            try {\n                const response = await axios.get('http://localhost:3002/languages');\n                setLanguages(response.data);\n            } catch (error) {\n                console.error('Error fetching languages:', error);\n            }\n        };\n\n        fetchLanguages();\n    }, []);\n\n    const handleLanguageSelect = async (selectedLanguage) => {\n        dispatch(selectLanguage(selectedLanguage));\n        setSelectedTheme('');\n\n        try {\n            const response = await axios.get(`http://localhost:3002/themes/${selectedLanguage}`);\n            setThemes(response.data);\n        } catch (error) {\n            console.error('Error fetching themes:', error);\n        }\n    };\n\n    const handleThemeSelect = async (selectedTheme) => {\n        dispatch(selectTheme(selectedTheme));\n        setCurrentFlashcardIndex(0);\n        setCurrentQuizQuestionIndex(0);\n        setIsFlipped(false);\n        setQuizMode(false);\n\n        try {\n            const response = await axios.get(`http://localhost:3002/words/${selectedLanguage}/${selectedTheme}`);\n            setFlashcards(response.data);\n        } catch (error) {\n            console.error('Error fetching flashcards:', error);\n        }\n    };\n\n    const handleCardClick = () => {\n        setIsFlipped(!isFlipped);\n    };\n\n    const isOptionSelected = (option) => {\n        return userAnswers === option;\n    };\n\n    const handleNextCard = () => {\n        if (!quizMode) {\n            if (currentFlashcardIndex < flashcards.length - 1) {\n                setCurrentFlashcardIndex(currentFlashcardIndex + 1);\n            } else {\n                setCurrentFlashcardIndex(0);\n            }\n        } else {\n            if (currentQuizQuestionIndex < quizQuestions.length - 1) {\n                setCurrentQuizQuestionIndex(currentQuizQuestionIndex + 1);\n            } else {\n                setCurrentQuizQuestionIndex(0);\n            }\n        }\n\n        setIsFlipped(false);\n        setUserAnswers('');\n    };\n\n    const handlePreviousCard = () => {\n        if (!quizMode) {\n            if (currentFlashcardIndex > 0) {\n                setCurrentFlashcardIndex(currentFlashcardIndex - 1);\n            } else {\n                setCurrentFlashcardIndex(flashcards.length - 1);\n            }\n        } else {\n            if (currentQuizQuestionIndex > 0) {\n                setCurrentQuizQuestionIndex(currentQuizQuestionIndex - 1);\n            } else {\n                setCurrentQuizQuestionIndex(quizQuestions.length - 1);\n            }\n        }\n\n        setIsFlipped(false);\n    };\n\n    const handleTakeQuiz = () => {\n        if (!selectedLanguage || !selectedTheme) {\n            alert('Please select a language and a theme to take the quiz.');\n            return;\n        }\n\n        const quizQuestions = flashcards.map(card => {\n            const correctAnswer = card.answer;\n            const options = shuffleArray(flashcards.map(flashcard => flashcard.answer));\n            return { question: card.question, options, correctAnswer };\n        });\n\n        setQuizQuestions(quizQuestions);\n        setUserAnswers('');\n        setCorrectAnswers(0);\n        setQuizMode(true);\n    };\n\n    const handleAnswerSelect = (selectedAnswer) => {\n        setUserAnswers(selectedAnswer);\n    };\n\n    const handleSubmitQuiz = () => {\n        const correctAnswer = quizQuestions[currentQuizQuestionIndex].correctAnswer;\n        const isCorrect = userAnswers === correctAnswer;\n        if (isCorrect) {\n            setCorrectAnswers(correctAnswers + 1);\n        }\n    };\n\n    const shuffleArray = (array) => {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    };\n\n    return (\n        <div className=\"section\">\n            <div className=\"language-selector\">\n                <h3>Languages</h3>\n                <ul>\n                    {languages.map((language) => (\n                        <li key={language.id} onClick={() => handleLanguageSelect(language.name)}>\n                            {language.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {selectedLanguage && (\n                <div className=\"theme-container\">\n                    <h3>Themes for {selectedLanguage}</h3>\n                    <ThemeSelector themes={themes} onThemeSelect={handleThemeSelect} language={selectedLanguage} />\n                </div>\n            )}\n\n            {selectedTheme && (\n                <div className=\"quiz-container\">\n                    {quizMode ? (\n                        <>\n                            <h3 className=\"quiz-title\">Quiz: {selectedTheme}</h3>\n                            <div className=\"quiz-question\">\n                                <p>{quizQuestions[currentQuizQuestionIndex].question}</p>\n                            </div>\n                            <div className=\"quiz-options\">\n                                {quizQuestions[currentQuizQuestionIndex].options.map((option, idx) => (\n                                    <div\n                                        key={idx}\n                                        className={`quiz-option ${isOptionSelected(option) ? 'selected-option' : ''}`}\n                                        onClick={() => handleAnswerSelect(option)}\n                                    >\n                                        {option}\n                                    </div>\n                                ))}\n                            </div>\n\n                            <button className=\"submit-button\" onClick={handleSubmitQuiz}>Submit Quiz</button>\n                            <p>Correct Answers: {correctAnswers}</p>\n                        </>\n                    ) : (\n                        <div className={`card__inner ${isFlipped ? 'is-flipped' : ''}`} onClick={handleCardClick}>\n                            {flashcards.length > 0 ? (\n                                <>\n                                    <div\n                                        id=\"question\"\n                                        className={`question ${isFlipped ? 'hidden' : ''}`}\n                                    >\n                                        {flashcards[currentFlashcardIndex]?.question}\n                                    </div>\n                                    <div\n                                        id=\"answer\"\n                                        className={`answer ${isFlipped ? '' : 'hidden'}`}\n                                    >\n                                        {flashcards[currentFlashcardIndex]?.answer}\n                                    </div>\n                                </>\n                            ) : (\n                                <p>Loading flashcards...</p>\n                            )}\n                        </div>\n                    )}\n                    <div className=\"button-container\">\n                        {!quizMode && <button onClick={handleTakeQuiz}>Take a Quiz</button>}\n                        <button onClick={handlePreviousCard}>Previous</button>\n                        <button onClick={handleNextCard}>Next</button>\n                    </div>\n                </div>\n            )}\n\n            {!selectedLanguage && (\n                <div className=\"instruction-container\">\n                    <p className=\"instruction\">Choose a language to start learning.</p>\n                    <img src=\"5.png\" alt=\"Placeholder\" className=\"instruction-image\"/>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Learn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}